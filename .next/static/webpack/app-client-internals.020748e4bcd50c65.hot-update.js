/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app-client-internals",{

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=next%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&server=false!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=next%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&server=false! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/app-router.js */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/layout-router.js */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/layout-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/render-from-template-context.js */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/render-from-template-context.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9uZXh0LXZpcnR1YWwtMzkzZDkxYmJjZC8wL2NhY2hlL25leHQtbnBtLTEzLjAuMi1iMzlhYmQyMmQwLWY2ZmVhMmVlMzQuemlwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1uZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZhcHAtcm91dGVyLmpzJm1vZHVsZXM9bmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbGF5b3V0LXJvdXRlci5qcyZtb2R1bGVzPW5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMmc2VydmVyPWZhbHNlIS5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5U0FBOEU7QUFDOUUsK1NBQWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/ZTk4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLmpzXCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=next%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js&modules=next%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js&server=false!\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js ***!
  \************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = AppRouter;\nexports.fetchServerResponse = fetchServerResponse;\nvar _async_to_generator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react/index.js\"));\nvar _client = __webpack_require__(/*! next/dist/compiled/react-server-dom-webpack/client */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react-server-dom-webpack/client.js\");\nvar _appRouterContext = __webpack_require__(/*! ../../shared/lib/app-router-context */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/shared/lib/app-router-context.js\");\nvar _reducer = __webpack_require__(/*! ./reducer */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/reducer.js\");\nvar _hooksClientContext = __webpack_require__(/*! ../../shared/lib/hooks-client-context */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/shared/lib/hooks-client-context.js\");\nvar _useReducerWithDevtools = __webpack_require__(/*! ./use-reducer-with-devtools */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/use-reducer-with-devtools.js\");\nvar _errorBoundary = __webpack_require__(/*! ./error-boundary */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/error-boundary.js\");\nfunction AppRouter(props) {\n    return /*#__PURE__*/ _react[\"default\"].createElement(_errorBoundary.ErrorBoundary, {\n        errorComponent: _errorBoundary.GlobalErrorComponent\n    }, /*#__PURE__*/ _react[\"default\"].createElement(Router, Object.assign({}, props)));\n}\n_c = AppRouter;\n\"use client\";\nfunction urlToUrlWithoutFlightMarker(url) {\n    var urlWithoutFlightParameters = new URL(url, location.origin);\n    // TODO-APP: handle .rsc for static export case\n    return urlWithoutFlightParameters;\n}\nvar HotReloader =  false ? 0 : (__webpack_require__(/*! ./react-dev-overlay/hot-reloader-client */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/react-dev-overlay/hot-reloader-client.js\")[\"default\"]);\nfunction fetchServerResponse(url, flightRouterState, prefetch) {\n    return _fetchServerResponse.apply(this, arguments);\n}\nfunction _fetchServerResponse() {\n    _fetchServerResponse = _async_to_generator(function(url, flightRouterState, prefetch) {\n        var headers, res, canonicalUrl, isFlightResponse, flightData;\n        return __generator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    headers = {\n                        // Enable flight response\n                        __rsc__: \"1\",\n                        // Provide the current router state\n                        __next_router_state_tree__: JSON.stringify(flightRouterState)\n                    };\n                    if (prefetch) {\n                        // Enable prefetch response\n                        headers.__next_router_prefetch__ = \"1\";\n                    }\n                    return [\n                        4,\n                        fetch(url.toString(), {\n                            headers: headers\n                        })\n                    ];\n                case 1:\n                    res = _state.sent();\n                    canonicalUrl = res.redirected ? urlToUrlWithoutFlightMarker(res.url) : undefined;\n                    isFlightResponse = res.headers.get(\"content-type\") === \"application/octet-stream\";\n                    // If fetch returns something different than flight response handle it like a mpa navigation\n                    if (!isFlightResponse) {\n                        return [\n                            2,\n                            [\n                                res.url,\n                                undefined\n                            ]\n                        ];\n                    }\n                    return [\n                        4,\n                        (0, _client).createFromFetch(Promise.resolve(res))\n                    ];\n                case 2:\n                    flightData = _state.sent();\n                    return [\n                        2,\n                        [\n                            flightData,\n                            canonicalUrl\n                        ]\n                    ];\n            }\n        });\n    });\n    return _fetchServerResponse.apply(this, arguments);\n}\n// Ensure the initialParallelRoutes are not combined because of double-rendering in the browser with Strict Mode.\n// TODO-APP: move this back into AppRouter\nvar initialParallelRoutes =  false ? 0 : new Map();\nvar prefetched = new Set();\n/**\n * The global router that wraps the application components.\n */ function Router(param) {\n    var initialHead = param.initialHead, initialTree = param.initialTree, initialCanonicalUrl = param.initialCanonicalUrl, children = param.children, assetPrefix = param.assetPrefix;\n    _s();\n    var initialState = (0, _react).useMemo(function() {\n        return {\n            tree: initialTree,\n            cache: {\n                data: null,\n                subTreeData: children,\n                parallelRoutes:  false ? 0 : initialParallelRoutes\n            },\n            prefetchCache: new Map(),\n            pushRef: {\n                pendingPush: false,\n                mpaNavigation: false\n            },\n            focusAndScrollRef: {\n                apply: false\n            },\n            canonicalUrl: initialCanonicalUrl + // Hash is read as the initial value for canonicalUrl in the browser\n            // This is safe to do as canonicalUrl can't be rendered, it's only used to control the history updates the useEffect further down.\n            ( true ? window.location.hash : 0)\n        };\n    }, [\n        children,\n        initialCanonicalUrl,\n        initialTree\n    ]);\n    var ref = _slicedToArray((0, _useReducerWithDevtools).useReducerWithReduxDevtools(_reducer.reducer, initialState), 3), ref1 = ref[0], tree = ref1.tree, cache = ref1.cache, prefetchCache = ref1.prefetchCache, pushRef = ref1.pushRef, focusAndScrollRef = ref1.focusAndScrollRef, canonicalUrl = ref1.canonicalUrl, dispatch = ref[1], sync = ref[2];\n    (0, _react).useEffect(function() {\n        // Ensure initialParallelRoutes is cleaned up from memory once it's used.\n        initialParallelRoutes = null;\n    }, []);\n    // Add memoized pathname/query for useSearchParams and usePathname.\n    var ref2 = (0, _react).useMemo(function() {\n        var url = new URL(canonicalUrl,  false ? 0 : window.location.href);\n        return {\n            // This is turned into a readonly class in `useSearchParams`\n            searchParams: url.searchParams,\n            pathname: url.pathname\n        };\n    }, [\n        canonicalUrl\n    ]), searchParams = ref2.searchParams, pathname = ref2.pathname;\n    /**\n   * Server response that only patches the cache and tree.\n   */ var changeByServerResponse = (0, _react).useCallback(function(previousTree, flightData, overrideCanonicalUrl) {\n        dispatch({\n            type: _reducer.ACTION_SERVER_PATCH,\n            flightData: flightData,\n            previousTree: previousTree,\n            overrideCanonicalUrl: overrideCanonicalUrl,\n            cache: {\n                data: null,\n                subTreeData: null,\n                parallelRoutes: new Map()\n            },\n            mutable: {}\n        });\n    }, [\n        dispatch\n    ]);\n    /**\n   * The app router that is exposed through `useRouter`. It's only concerned with dispatching actions to the reducer, does not hold state.\n   */ var appRouter = (0, _react).useMemo(function() {\n        var navigate = function(href, navigateType, forceOptimisticNavigation) {\n            return dispatch({\n                type: _reducer.ACTION_NAVIGATE,\n                url: new URL(href, location.origin),\n                forceOptimisticNavigation: forceOptimisticNavigation,\n                navigateType: navigateType,\n                cache: {\n                    data: null,\n                    subTreeData: null,\n                    parallelRoutes: new Map()\n                },\n                mutable: {}\n            });\n        };\n        var routerInstance = {\n            back: function() {\n                return window.history.back();\n            },\n            forward: function() {\n                return window.history.forward();\n            },\n            // TODO-APP: implement prefetching of flight\n            prefetch: _async_to_generator(function(href) {\n                var url, ref, routerTree, serverResponse, err;\n                return __generator(this, function(_state) {\n                    switch(_state.label){\n                        case 0:\n                            // If prefetch has already been triggered, don't trigger it again.\n                            if (prefetched.has(href)) {\n                                return [\n                                    2\n                                ];\n                            }\n                            prefetched.add(href);\n                            url = new URL(href, location.origin);\n                            _state.label = 1;\n                        case 1:\n                            _state.trys.push([\n                                1,\n                                3,\n                                ,\n                                4\n                            ]);\n                            routerTree = ((ref = window.history.state) == null ? void 0 : ref.tree) || initialTree;\n                            return [\n                                4,\n                                fetchServerResponse(url, routerTree, true)\n                            ];\n                        case 2:\n                            serverResponse = _state.sent();\n                            // @ts-ignore startTransition exists\n                            _react[\"default\"].startTransition(function() {\n                                dispatch({\n                                    type: _reducer.ACTION_PREFETCH,\n                                    url: url,\n                                    tree: routerTree,\n                                    serverResponse: serverResponse\n                                });\n                            });\n                            return [\n                                3,\n                                4\n                            ];\n                        case 3:\n                            err = _state.sent();\n                            console.error(\"PREFETCH ERROR\", err);\n                            return [\n                                3,\n                                4\n                            ];\n                        case 4:\n                            return [\n                                2\n                            ];\n                    }\n                });\n            }),\n            replace: function(href) {\n                var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                // @ts-ignore startTransition exists\n                _react[\"default\"].startTransition(function() {\n                    navigate(href, \"replace\", Boolean(options.forceOptimisticNavigation));\n                });\n            },\n            push: function(href) {\n                var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n                // @ts-ignore startTransition exists\n                _react[\"default\"].startTransition(function() {\n                    navigate(href, \"push\", Boolean(options.forceOptimisticNavigation));\n                });\n            },\n            refresh: function() {\n                // @ts-ignore startTransition exists\n                _react[\"default\"].startTransition(function() {\n                    dispatch({\n                        type: _reducer.ACTION_REFRESH,\n                        // TODO-APP: revisit if this needs to be passed.\n                        cache: {\n                            data: null,\n                            subTreeData: null,\n                            parallelRoutes: new Map()\n                        },\n                        mutable: {}\n                    });\n                });\n            }\n        };\n        return routerInstance;\n    }, [\n        dispatch,\n        initialTree\n    ]);\n    (0, _react).useEffect(function() {\n        // When mpaNavigation flag is set do a hard navigation to the new url.\n        if (pushRef.mpaNavigation) {\n            window.location.href = canonicalUrl;\n            return;\n        }\n        // Identifier is shortened intentionally.\n        // __NA is used to identify if the history entry can be handled by the app-router.\n        // __N is used to identify if the history entry can be handled by the old router.\n        var historyState = {\n            __NA: true,\n            tree: tree\n        };\n        if (pushRef.pendingPush) {\n            // This intentionally mutates React state, pushRef is overwritten to ensure additional push/replace calls do not trigger an additional history entry.\n            pushRef.pendingPush = false;\n            window.history.pushState(historyState, \"\", canonicalUrl);\n        } else {\n            window.history.replaceState(historyState, \"\", canonicalUrl);\n        }\n        sync();\n    }, [\n        tree,\n        pushRef,\n        canonicalUrl,\n        sync\n    ]);\n    // Add `window.nd` for debugging purposes.\n    // This is not meant for use in applications as concurrent rendering will affect the cache/tree/router.\n    if (true) {\n        // @ts-ignore this is for debugging\n        window.nd = {\n            router: appRouter,\n            cache: cache,\n            prefetchCache: prefetchCache,\n            tree: tree\n        };\n    }\n    /**\n   * Handle popstate event, this is used to handle back/forward in the browser.\n   * By default dispatches ACTION_RESTORE, however if the history entry was not pushed/replaced by app-router it will reload the page.\n   * That case can happen when the old router injected the history entry.\n   */ var onPopState = (0, _react).useCallback(function(param) {\n        var state = param.state;\n        if (!state) {\n            // TODO-APP: this case only happens when pushState/replaceState was called outside of Next.js. It should probably reload the page in this case.\n            return;\n        }\n        // TODO-APP: this case happens when pushState/replaceState was called outside of Next.js or when the history entry was pushed by the old router.\n        // It reloads the page in this case but we might have to revisit this as the old router ignores it.\n        if (!state.__NA) {\n            window.location.reload();\n            return;\n        }\n        // @ts-ignore useTransition exists\n        // TODO-APP: Ideally the back button should not use startTransition as it should apply the updates synchronously\n        // Without startTransition works if the cache is there for this path\n        _react[\"default\"].startTransition(function() {\n            dispatch({\n                type: _reducer.ACTION_RESTORE,\n                url: new URL(window.location.href),\n                tree: state.tree\n            });\n        });\n    }, [\n        dispatch\n    ]);\n    // Register popstate event to call onPopstate.\n    (0, _react).useEffect(function() {\n        window.addEventListener(\"popstate\", onPopState);\n        return function() {\n            window.removeEventListener(\"popstate\", onPopState);\n        };\n    }, [\n        onPopState\n    ]);\n    return /*#__PURE__*/ _react[\"default\"].createElement(_hooksClientContext.PathnameContext.Provider, {\n        value: pathname\n    }, /*#__PURE__*/ _react[\"default\"].createElement(_hooksClientContext.SearchParamsContext.Provider, {\n        value: searchParams\n    }, /*#__PURE__*/ _react[\"default\"].createElement(_appRouterContext.GlobalLayoutRouterContext.Provider, {\n        value: {\n            changeByServerResponse: changeByServerResponse,\n            tree: tree,\n            focusAndScrollRef: focusAndScrollRef\n        }\n    }, /*#__PURE__*/ _react[\"default\"].createElement(_appRouterContext.AppRouterContext.Provider, {\n        value: appRouter\n    }, /*#__PURE__*/ _react[\"default\"].createElement(_appRouterContext.LayoutRouterContext.Provider, {\n        value: {\n            childNodes: cache.parallelRoutes,\n            tree: tree,\n            // Root node always has `url`\n            // Provided in AppTreeContext to ensure it can be overwritten in layout-router\n            url: canonicalUrl\n        }\n    }, HotReloader ? /*#__PURE__*/ _react[\"default\"].createElement(HotReloader, {\n        assetPrefix: assetPrefix\n    }, initialHead, cache.subTreeData) : /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, initialHead, cache.subTreeData))))));\n}\n_s(Router, \"yWCtvIH/OEoTmoHU249b5/prOjk=\");\n_c1 = Router;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=app-router.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c1, \"Router\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/error-boundary.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/error-boundary.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nvar _typeof = function(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ErrorBoundary = ErrorBoundary;\nexports.GlobalErrorComponent = GlobalErrorComponent;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react/index.js\"));\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */ var ErrorBoundaryHandler = /*#__PURE__*/ function(_Component) {\n    _inherits(ErrorBoundaryHandler, _Component);\n    var _super = _createSuper(ErrorBoundaryHandler);\n    function ErrorBoundaryHandler(props) {\n        _classCallCheck(this, ErrorBoundaryHandler);\n        var _this;\n        _this = _super.call(this, props);\n        _this.reset = function() {\n            _this.setState({\n                error: null\n            });\n        };\n        _this.state = {\n            error: null\n        };\n        return _this;\n    }\n    _createClass(ErrorBoundaryHandler, [\n        {\n            key: \"render\",\n            value: function render() {\n                if (this.state.error) {\n                    return /*#__PURE__*/ _react[\"default\"].createElement(this.props.errorComponent, {\n                        error: this.state.error,\n                        reset: this.reset\n                    });\n                }\n                return this.props.children;\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromError\",\n            value: function getDerivedStateFromError(error) {\n                return {\n                    error: error\n                };\n            }\n        }\n    ]);\n    return ErrorBoundaryHandler;\n}(_react[\"default\"].Component);\nfunction ErrorBoundary(param) {\n    var errorComponent = param.errorComponent, children = param.children;\n    if (errorComponent) {\n        return /*#__PURE__*/ _react[\"default\"].createElement(ErrorBoundaryHandler, {\n            errorComponent: errorComponent\n        }, children);\n    }\n    return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, children);\n}\n_c = ErrorBoundary;\nvar styles = {\n    error: {\n        fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, \"Segoe UI\", \"Fira Sans\", Avenir, \"Helvetica Neue\", \"Lucida Grande\", sans-serif',\n        height: \"100vh\",\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    desc: {\n        display: \"inline-block\",\n        textAlign: \"left\",\n        lineHeight: \"49px\",\n        height: \"49px\",\n        verticalAlign: \"middle\"\n    },\n    h2: {\n        fontSize: \"14px\",\n        fontWeight: \"normal\",\n        lineHeight: \"49px\",\n        margin: 0,\n        padding: 0\n    }\n};\nfunction GlobalErrorComponent() {\n    return /*#__PURE__*/ _react[\"default\"].createElement(\"html\", null, /*#__PURE__*/ _react[\"default\"].createElement(\"body\", null, /*#__PURE__*/ _react[\"default\"].createElement(\"div\", {\n        style: styles.error\n    }, /*#__PURE__*/ _react[\"default\"].createElement(\"div\", {\n        style: styles.desc\n    }, /*#__PURE__*/ _react[\"default\"].createElement(\"h2\", {\n        style: styles.h2\n    }, \"Application error: a client-side exception has occurred (see the browser console for more information).\")))));\n}\n_c1 = GlobalErrorComponent;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=error-boundary.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"ErrorBoundary\");\n$RefreshReg$(_c1, \"GlobalErrorComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/error-boundary.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/infinite-promise.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/infinite-promise.js ***!
  \******************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createInfinitePromise = createInfinitePromise;\n/**\n * Used to cache in createInfinitePromise\n */ var infinitePromise;\nfunction createInfinitePromise() {\n    if (!infinitePromise) {\n        // Only create the Promise once\n        infinitePromise = new Promise(function() {\n        // This is used to debug when the rendering is never updated.\n        // setTimeout(() => {\n        //   infinitePromise = new Error('Infinite promise')\n        //   resolve()\n        // }, 5000)\n        });\n    }\n    return infinitePromise;\n}\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=infinite-promise.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9uZXh0LXZpcnR1YWwtMzkzZDkxYmJjZC8wL2NhY2hlL25leHQtbnBtLTEzLjAuMi1iMzlhYmQyMmQwLWY2ZmVhMmVlMzQuemlwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaW5maW5pdGUtcHJvbWlzZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCw2QkFBNkIsR0FBR0U7QUFDaEM7O0NBRUMsR0FBRyxJQUFJQztBQUNSLFNBQVNELHdCQUF3QjtJQUM3QixJQUFJLENBQUNDLGlCQUFpQjtRQUNsQiwrQkFBK0I7UUFDL0JBLGtCQUFrQixJQUFJQyxRQUFRLFdBQUk7UUFDbEMsNkRBQTZEO1FBQzdELHFCQUFxQjtRQUNyQixvREFBb0Q7UUFDcEQsY0FBYztRQUNkLFdBQVc7UUFDWDtJQUNKLENBQUM7SUFDRCxPQUFPRDtBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9ILE9BQVFLLENBQUFBLFVBQU8sS0FBSyxjQUFlLE9BQU9MLE9BQVFLLENBQUFBLFVBQU8sS0FBSyxZQUFZTCxPQUFRSyxDQUFBQSxVQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9MLE9BQVFLLENBQUFBLFVBQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktSLE9BQU9DLGNBQWMsQ0FBQ0MsT0FBUUssQ0FBQUEsVUFBTyxFQUFFLGNBQWM7UUFBRUosT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9TLE1BQU0sQ0FBQ1AsT0FBUUssQ0FBQUEsVUFBTyxFQUFFTDtJQUMvQlEsT0FBT1IsT0FBTyxHQUFHQSxPQUFRSyxDQUFBQSxVQUFPO0FBQ2xDLENBQUMsQ0FFRCw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vLnlhcm4vX192aXJ0dWFsX18vbmV4dC12aXJ0dWFsLTM5M2Q5MWJiY2QvMC9jYWNoZS9uZXh0LW5wbS0xMy4wLjItYjM5YWJkMjJkMC1mNmZlYTJlZTM0LnppcC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2luZmluaXRlLXByb21pc2UuanM/YjZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlSW5maW5pdGVQcm9taXNlID0gY3JlYXRlSW5maW5pdGVQcm9taXNlO1xuLyoqXG4gKiBVc2VkIHRvIGNhY2hlIGluIGNyZWF0ZUluZmluaXRlUHJvbWlzZVxuICovIGxldCBpbmZpbml0ZVByb21pc2U7XG5mdW5jdGlvbiBjcmVhdGVJbmZpbml0ZVByb21pc2UoKSB7XG4gICAgaWYgKCFpbmZpbml0ZVByb21pc2UpIHtcbiAgICAgICAgLy8gT25seSBjcmVhdGUgdGhlIFByb21pc2Ugb25jZVxuICAgICAgICBpbmZpbml0ZVByb21pc2UgPSBuZXcgUHJvbWlzZSgoKT0+e1xuICAgICAgICAvLyBUaGlzIGlzIHVzZWQgdG8gZGVidWcgd2hlbiB0aGUgcmVuZGVyaW5nIGlzIG5ldmVyIHVwZGF0ZWQuXG4gICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAvLyAgIGluZmluaXRlUHJvbWlzZSA9IG5ldyBFcnJvcignSW5maW5pdGUgcHJvbWlzZScpXG4gICAgICAgIC8vICAgcmVzb2x2ZSgpXG4gICAgICAgIC8vIH0sIDUwMDApXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gaW5maW5pdGVQcm9taXNlO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmZpbml0ZS1wcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZUluZmluaXRlUHJvbWlzZSIsImluZmluaXRlUHJvbWlzZSIsIlByb21pc2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/infinite-promise.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/layout-router.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/layout-router.js ***!
  \***************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nvar _typeof = function(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = OuterLayoutRouter;\nexports.InnerLayoutRouter = InnerLayoutRouter;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react/index.js\"));\nvar _appRouterContext = __webpack_require__(/*! ../../shared/lib/app-router-context */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/shared/lib/app-router-context.js\");\nvar _appRouter = __webpack_require__(/*! ./app-router */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js\");\nvar _infinitePromise = __webpack_require__(/*! ./infinite-promise */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/infinite-promise.js\");\nvar _errorBoundary = __webpack_require__(/*! ./error-boundary */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/error-boundary.js\");\nvar _matchSegments = __webpack_require__(/*! ./match-segments */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/match-segments.js\");\nvar _navigation = __webpack_require__(/*! ./navigation */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/navigation.js\");\nfunction OuterLayoutRouter(param) {\n    var parallelRouterKey = param.parallelRouterKey, segmentPath = param.segmentPath, childProp = param.childProp, error = param.error, loading = param.loading, hasLoading = param.hasLoading, template = param.template, notFound = param.notFound, rootLayoutIncluded = param.rootLayoutIncluded;\n    _s();\n    var context = (0, _react).useContext(_appRouterContext.LayoutRouterContext);\n    if (!context) {\n        throw new Error(\"invariant expected layout router to be mounted\");\n    }\n    var childNodes = context.childNodes, tree = context.tree, url = context.url;\n    // Get the current parallelRouter cache node\n    var childNodesForParallelRouter = childNodes.get(parallelRouterKey);\n    // If the parallel router cache node does not exist yet, create it.\n    // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n    if (!childNodesForParallelRouter) {\n        childNodes.set(parallelRouterKey, new Map());\n        childNodesForParallelRouter = childNodes.get(parallelRouterKey);\n    }\n    // Get the active segment in the tree\n    // The reason arrays are used in the data format is that these are transferred from the server to the browser so it's optimized to save bytes.\n    var treeSegment = tree[1][parallelRouterKey][0];\n    var childPropSegment = Array.isArray(childProp.segment) ? childProp.segment[1] : childProp.segment;\n    // If segment is an array it's a dynamic route and we want to read the dynamic route value as the segment to get from the cache.\n    var currentChildSegment = Array.isArray(treeSegment) ? treeSegment[1] : treeSegment;\n    /**\n   * Decides which segments to keep rendering, all segments that are not active will be wrapped in `<Offscreen>`.\n   */ // TODO-APP: Add handling of `<Offscreen>` when it's available.\n    var preservedSegments = [\n        currentChildSegment\n    ];\n    return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, preservedSegments.map(function(preservedSegment) {\n        return(/*\n            - Error boundary\n              - Only renders error boundary if error component is provided.\n              - Rendered for each segment to ensure they have their own error state.\n            - Loading boundary\n              - Only renders suspense boundary if loading components is provided.\n              - Rendered for each segment to ensure they have their own loading state.\n              - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n          */ /*#__PURE__*/ _react[\"default\"].createElement(_appRouterContext.TemplateContext.Provider, {\n            key: preservedSegment,\n            value: /*#__PURE__*/ _react[\"default\"].createElement(_errorBoundary.ErrorBoundary, {\n                errorComponent: error\n            }, /*#__PURE__*/ _react[\"default\"].createElement(LoadingBoundary, {\n                hasLoading: hasLoading,\n                loading: loading\n            }, /*#__PURE__*/ _react[\"default\"].createElement(NotFoundBoundary, {\n                notFound: notFound\n            }, /*#__PURE__*/ _react[\"default\"].createElement(RedirectBoundary, null, /*#__PURE__*/ _react[\"default\"].createElement(InnerLayoutRouter, {\n                parallelRouterKey: parallelRouterKey,\n                url: url,\n                tree: tree,\n                childNodes: childNodesForParallelRouter,\n                childProp: childPropSegment === preservedSegment ? childProp : null,\n                segmentPath: segmentPath,\n                path: preservedSegment,\n                isActive: currentChildSegment === preservedSegment,\n                rootLayoutIncluded: rootLayoutIncluded\n            })))))\n        }, template));\n    }));\n}\n_s(OuterLayoutRouter, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c = OuterLayoutRouter;\n\"use client\";\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */ function walkAddRefetch(segmentPathToWalk, treeToRecreate) {\n    if (segmentPathToWalk) {\n        var _segmentPathToWalk = _slicedToArray(segmentPathToWalk, 2), segment = _segmentPathToWalk[0], parallelRouteKey = _segmentPathToWalk[1];\n        var isLast = segmentPathToWalk.length === 2;\n        if ((0, _matchSegments).matchSegment(treeToRecreate[0], segment)) {\n            if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n                if (isLast) {\n                    var subTree = walkAddRefetch(undefined, treeToRecreate[1][parallelRouteKey]);\n                    return [\n                        treeToRecreate[0],\n                        _extends({}, treeToRecreate[1], _defineProperty({}, parallelRouteKey, [\n                            subTree[0],\n                            subTree[1],\n                            subTree[2],\n                            \"refetch\"\n                        ]))\n                    ];\n                }\n                return [\n                    treeToRecreate[0],\n                    _extends({}, treeToRecreate[1], _defineProperty({}, parallelRouteKey, walkAddRefetch(segmentPathToWalk.slice(2), treeToRecreate[1][parallelRouteKey])))\n                ];\n            }\n        }\n    }\n    return treeToRecreate;\n}\n/**\n * Check if the top of the HTMLElement is in the viewport.\n */ function topOfElementInViewport(element) {\n    var rect = element.getBoundingClientRect();\n    return rect.top >= 0;\n}\nfunction InnerLayoutRouter(param) {\n    var parallelRouterKey = param.parallelRouterKey, url = param.url, childNodes = param.childNodes, childProp = param.childProp, segmentPath = param.segmentPath, tree = param.tree, // isActive,\n    path = param.path, rootLayoutIncluded = param.rootLayoutIncluded;\n    _s1();\n    var context = (0, _react).useContext(_appRouterContext.GlobalLayoutRouterContext);\n    if (!context) {\n        throw new Error(\"invariant global layout router not mounted\");\n    }\n    var changeByServerResponse = context.changeByServerResponse, fullTree = context.tree, focusAndScrollRef = context.focusAndScrollRef;\n    var focusAndScrollElementRef = (0, _react).useRef(null);\n    (0, _react).useEffect(function() {\n        // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n        if (focusAndScrollRef.apply && focusAndScrollElementRef.current) {\n            // State is mutated to ensure that the focus and scroll is applied only once.\n            focusAndScrollRef.apply = false;\n            // Set focus on the element\n            focusAndScrollElementRef.current.focus();\n            // Only scroll into viewport when the layout is not visible currently.\n            if (!topOfElementInViewport(focusAndScrollElementRef.current)) {\n                var htmlElement = document.documentElement;\n                var existing = htmlElement.style.scrollBehavior;\n                htmlElement.style.scrollBehavior = \"auto\";\n                focusAndScrollElementRef.current.scrollIntoView();\n                htmlElement.style.scrollBehavior = existing;\n            }\n        }\n    }, [\n        focusAndScrollRef\n    ]);\n    // Read segment path from the parallel router cache node.\n    var childNode = childNodes.get(path);\n    // If childProp is available this means it's the Flight / SSR case.\n    if (childProp && // TODO-APP: verify if this can be null based on user code\n    childProp.current !== null && !childNode /*&&\n    !childProp.partial*/ ) {\n        // Add the segment's subTreeData to the cache.\n        // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n        childNodes.set(path, {\n            data: null,\n            subTreeData: childProp.current,\n            parallelRoutes: new Map()\n        });\n        // Mutates the prop in order to clean up the memory associated with the subTreeData as it is now part of the cache.\n        childProp.current = null;\n        // In the above case childNode was set on childNodes, so we have to get it from the cacheNodes again.\n        childNode = childNodes.get(path);\n    }\n    // When childNode is not available during rendering client-side we need to fetch it from the server.\n    if (!childNode) {\n        /**\n     * Router state with refetch marker added\n     */ // TODO-APP: remove ''\n        var refetchTree = walkAddRefetch([\n            \"\"\n        ].concat(_toConsumableArray(segmentPath)), fullTree);\n        /**\n     * Flight data fetch kicked off during render and put into the cache.\n     */ childNodes.set(path, {\n            data: (0, _appRouter).fetchServerResponse(new URL(url, location.origin), refetchTree),\n            subTreeData: null,\n            parallelRoutes: new Map()\n        });\n        // In the above case childNode was set on childNodes, so we have to get it from the cacheNodes again.\n        childNode = childNodes.get(path);\n    }\n    // This case should never happen so it throws an error. It indicates there's a bug in the Next.js.\n    if (!childNode) {\n        throw new Error(\"Child node should always exist\");\n    }\n    // This case should never happen so it throws an error. It indicates there's a bug in the Next.js.\n    if (childNode.subTreeData && childNode.data) {\n        throw new Error(\"Child node should not have both subTreeData and data\");\n    }\n    // If cache node has a data request we have to unwrap response by `use` and update the cache.\n    if (childNode.data) {\n        // TODO-APP: error case\n        /**\n     * Flight response data\n     */ // When the data has not resolved yet `use` will suspend here.\n        var ref = _slicedToArray((0, _react).use(childNode.data), 2), flightData = ref[0], overrideCanonicalUrl = ref[1];\n        // Handle case when navigating to page in `pages` from `app`\n        if (typeof flightData === \"string\") {\n            window.location.href = url;\n            return null;\n        }\n        // segmentPath from the server does not match the layout's segmentPath\n        childNode.data = null;\n        // setTimeout is used to start a new transition during render, this is an intentional hack around React.\n        setTimeout(function() {\n            // @ts-ignore startTransition exists\n            _react[\"default\"].startTransition(function() {\n                // TODO-APP: handle redirect\n                changeByServerResponse(fullTree, flightData, overrideCanonicalUrl);\n            });\n        });\n        // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n        (0, _react).use((0, _infinitePromise).createInfinitePromise());\n    }\n    // If cache node has no subTreeData and no data request we have to infinitely suspend as the data will likely flow in from another place.\n    // TODO-APP: double check users can't return null in a component that will kick in here.\n    if (!childNode.subTreeData) {\n        (0, _react).use((0, _infinitePromise).createInfinitePromise());\n    }\n    var subtree = /*#__PURE__*/ _react[\"default\"].createElement(_appRouterContext.LayoutRouterContext.Provider, {\n        value: {\n            tree: tree[1][parallelRouterKey],\n            childNodes: childNode.parallelRoutes,\n            // TODO-APP: overriding of url for parallel routes\n            url: url\n        }\n    }, childNode.subTreeData);\n    // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n    return rootLayoutIncluded ? /*#__PURE__*/ _react[\"default\"].createElement(\"div\", {\n        ref: focusAndScrollElementRef,\n        \"data-nextjs-scroll-focus-boundary\": \"\"\n    }, subtree) : subtree;\n}\n_s1(InnerLayoutRouter, \"JQanpc2hF1A904pZOh54fuThoYw=\");\n_c1 = InnerLayoutRouter;\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */ function LoadingBoundary(param) {\n    var children = param.children, loading = param.loading, hasLoading = param.hasLoading;\n    if (hasLoading) {\n        // @ts-expect-error TODO-APP: React.Suspense fallback type is wrong\n        return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Suspense, {\n            fallback: loading\n        }, children);\n    }\n    return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, children);\n}\n_c2 = LoadingBoundary;\nfunction HandleRedirect(param) {\n    var redirect = param.redirect;\n    _s2();\n    var router = (0, _navigation).useRouter();\n    (0, _react).useEffect(function() {\n        router.replace(redirect, {});\n    }, [\n        redirect,\n        router\n    ]);\n    return null;\n}\n_s2(HandleRedirect, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\");\n_c3 = HandleRedirect;\nvar RedirectErrorBoundary = /*#__PURE__*/ function(_Component) {\n    \"use strict\";\n    _inherits(RedirectErrorBoundary, _Component);\n    var _super = _createSuper(RedirectErrorBoundary);\n    function RedirectErrorBoundary(props) {\n        _classCallCheck(this, RedirectErrorBoundary);\n        var _this;\n        _this = _super.call(this, props);\n        _this.state = {\n            redirect: null\n        };\n        return _this;\n    }\n    _createClass(RedirectErrorBoundary, [\n        {\n            key: \"render\",\n            value: function render() {\n                var redirect = this.state.redirect;\n                if (redirect !== null) {\n                    return /*#__PURE__*/ _react[\"default\"].createElement(HandleRedirect, {\n                        redirect: redirect\n                    });\n                }\n                return this.props.children;\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromError\",\n            value: function getDerivedStateFromError(error) {\n                var ref;\n                if ((ref = error.digest) == null ? void 0 : ref.startsWith(\"NEXT_REDIRECT\")) {\n                    var url = error.digest.split(\";\")[1];\n                    return {\n                        redirect: url\n                    };\n                }\n                // Re-throw if error is not for redirect\n                throw error;\n            }\n        }\n    ]);\n    return RedirectErrorBoundary;\n}(_react[\"default\"].Component);\nfunction RedirectBoundary(param) {\n    var children = param.children;\n    _s3();\n    var router = (0, _navigation).useRouter();\n    return /*#__PURE__*/ _react[\"default\"].createElement(RedirectErrorBoundary, {\n        router: router\n    }, children);\n}\n_s3(RedirectBoundary, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\");\n_c4 = RedirectBoundary;\nvar NotFoundErrorBoundary = /*#__PURE__*/ function(_Component) {\n    \"use strict\";\n    _inherits(NotFoundErrorBoundary, _Component);\n    var _super = _createSuper(NotFoundErrorBoundary);\n    function NotFoundErrorBoundary(props) {\n        _classCallCheck(this, NotFoundErrorBoundary);\n        var _this;\n        _this = _super.call(this, props);\n        _this.state = {\n            notFoundTriggered: false\n        };\n        return _this;\n    }\n    _createClass(NotFoundErrorBoundary, [\n        {\n            key: \"render\",\n            value: function render() {\n                if (this.state.notFoundTriggered) {\n                    return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/ _react[\"default\"].createElement(\"meta\", {\n                        name: \"robots\",\n                        content: \"noindex\"\n                    }), this.props.notFound);\n                }\n                return this.props.children;\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromError\",\n            value: function getDerivedStateFromError(error) {\n                if (error.digest === \"NEXT_NOT_FOUND\") {\n                    return {\n                        notFoundTriggered: true\n                    };\n                }\n                // Re-throw if error is not for 404\n                throw error;\n            }\n        }\n    ]);\n    return NotFoundErrorBoundary;\n}(_react[\"default\"].Component);\nfunction NotFoundBoundary(param) {\n    var notFound = param.notFound, children = param.children;\n    return notFound ? /*#__PURE__*/ _react[\"default\"].createElement(NotFoundErrorBoundary, {\n        notFound: notFound\n    }, children) : /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, children);\n}\n_c5 = NotFoundBoundary;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=layout-router.js.map\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"OuterLayoutRouter\");\n$RefreshReg$(_c1, \"InnerLayoutRouter\");\n$RefreshReg$(_c2, \"LoadingBoundary\");\n$RefreshReg$(_c3, \"HandleRedirect\");\n$RefreshReg$(_c4, \"RedirectBoundary\");\n$RefreshReg$(_c5, \"NotFoundBoundary\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/layout-router.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/match-segments.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/match-segments.js ***!
  \****************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchSegment = void 0;\nvar matchSegment = function(existingSegment, segment) {\n    // Common case: segment is just a string\n    if (typeof existingSegment === \"string\" && typeof segment === \"string\") {\n        return existingSegment === segment;\n    }\n    // Dynamic parameter case: segment is an array with param/value. Both param and value are compared.\n    if (Array.isArray(existingSegment) && Array.isArray(segment)) {\n        return existingSegment[0] === segment[0] && existingSegment[1] === segment[1];\n    }\n    return false;\n};\nexports.matchSegment = matchSegment;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=match-segments.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9uZXh0LXZpcnR1YWwtMzkzZDkxYmJjZC8wL2NhY2hlL25leHQtbnBtLTEzLjAuMi1iMzlhYmQyMmQwLWY2ZmVhMmVlMzQuemlwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWF0Y2gtc2VnbWVudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsb0JBQW9CLEdBQUcsS0FBSztBQUM1QixJQUFNRSxlQUFlLFNBQUNDLGlCQUFpQkMsU0FBVTtJQUM3Qyx3Q0FBd0M7SUFDeEMsSUFBSSxPQUFPRCxvQkFBb0IsWUFBWSxPQUFPQyxZQUFZLFVBQVU7UUFDcEUsT0FBT0Qsb0JBQW9CQztJQUMvQixDQUFDO0lBQ0QsbUdBQW1HO0lBQ25HLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0gsb0JBQW9CRSxNQUFNQyxPQUFPLENBQUNGLFVBQVU7UUFDMUQsT0FBT0QsZUFBZSxDQUFDLEVBQUUsS0FBS0MsT0FBTyxDQUFDLEVBQUUsSUFBSUQsZUFBZSxDQUFDLEVBQUUsS0FBS0MsT0FBTyxDQUFDLEVBQUU7SUFDakYsQ0FBQztJQUNELE9BQU8sS0FBSztBQUNoQjtBQUNBSixvQkFBb0IsR0FBR0U7QUFFdkIsSUFBSSxDQUFDLE9BQU9GLE9BQVFPLENBQUFBLFVBQU8sS0FBSyxjQUFlLE9BQU9QLE9BQVFPLENBQUFBLFVBQU8sS0FBSyxZQUFZUCxPQUFRTyxDQUFBQSxVQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9QLE9BQVFPLENBQUFBLFVBQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcktWLE9BQU9DLGNBQWMsQ0FBQ0MsT0FBUU8sQ0FBQUEsVUFBTyxFQUFFLGNBQWM7UUFBRU4sT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9XLE1BQU0sQ0FBQ1QsT0FBUU8sQ0FBQUEsVUFBTyxFQUFFUDtJQUMvQlUsT0FBT1YsT0FBTyxHQUFHQSxPQUFRTyxDQUFBQSxVQUFPO0FBQ2xDLENBQUMsQ0FFRCwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vLnlhcm4vX192aXJ0dWFsX18vbmV4dC12aXJ0dWFsLTM5M2Q5MWJiY2QvMC9jYWNoZS9uZXh0LW5wbS0xMy4wLjItYjM5YWJkMjJkMC1mNmZlYTJlZTM0LnppcC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21hdGNoLXNlZ21lbnRzLmpzP2FlYTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm1hdGNoU2VnbWVudCA9IHZvaWQgMDtcbmNvbnN0IG1hdGNoU2VnbWVudCA9IChleGlzdGluZ1NlZ21lbnQsIHNlZ21lbnQpPT57XG4gICAgLy8gQ29tbW9uIGNhc2U6IHNlZ21lbnQgaXMganVzdCBhIHN0cmluZ1xuICAgIGlmICh0eXBlb2YgZXhpc3RpbmdTZWdtZW50ID09PSAnc3RyaW5nJyAmJiB0eXBlb2Ygc2VnbWVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGV4aXN0aW5nU2VnbWVudCA9PT0gc2VnbWVudDtcbiAgICB9XG4gICAgLy8gRHluYW1pYyBwYXJhbWV0ZXIgY2FzZTogc2VnbWVudCBpcyBhbiBhcnJheSB3aXRoIHBhcmFtL3ZhbHVlLiBCb3RoIHBhcmFtIGFuZCB2YWx1ZSBhcmUgY29tcGFyZWQuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmdTZWdtZW50KSAmJiBBcnJheS5pc0FycmF5KHNlZ21lbnQpKSB7XG4gICAgICAgIHJldHVybiBleGlzdGluZ1NlZ21lbnRbMF0gPT09IHNlZ21lbnRbMF0gJiYgZXhpc3RpbmdTZWdtZW50WzFdID09PSBzZWdtZW50WzFdO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuZXhwb3J0cy5tYXRjaFNlZ21lbnQgPSBtYXRjaFNlZ21lbnQ7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hdGNoLXNlZ21lbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1hdGNoU2VnbWVudCIsImV4aXN0aW5nU2VnbWVudCIsInNlZ21lbnQiLCJBcnJheSIsImlzQXJyYXkiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/match-segments.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/reducer.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/reducer.js ***!
  \*********************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.reducer = exports.ACTION_PREFETCH = exports.ACTION_SERVER_PATCH = exports.ACTION_RESTORE = exports.ACTION_NAVIGATE = exports.ACTION_REFRESH = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _matchSegments = __webpack_require__(/*! ./match-segments */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/match-segments.js\");\nvar _appRouter = __webpack_require__(/*! ./app-router */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/app-router.js\");\n/**\n * Create data fetching record for Promise.\n */ // TODO-APP: change `any` to type inference.\nfunction createRecordFromThenable(thenable) {\n    thenable.status = \"pending\";\n    thenable.then(function(value) {\n        if (thenable.status === \"pending\") {\n            thenable.status = \"fulfilled\";\n            thenable.value = value;\n        }\n    }, function(err) {\n        if (thenable.status === \"pending\") {\n            thenable.status = \"rejected\";\n            thenable.value = err;\n        }\n    });\n    return thenable;\n}\n/**\n * Read record value or throw Promise if it's not resolved yet.\n */ function readRecordValue(thenable) {\n    if (thenable.status === \"fulfilled\") {\n        return thenable.value;\n    } else {\n        throw thenable;\n    }\n}\nfunction createHrefFromUrl(url) {\n    return url.pathname + url.search + url.hash;\n}\n/**\n * Invalidate cache one level down from the router state.\n */ // TODO-APP: Verify if this needs to be recursive.\nfunction invalidateCacheByRouterState(newCache, existingCache, routerState) {\n    // Remove segment that we got data for so that it is filled in during rendering of subTreeData.\n    for(var key in routerState[1]){\n        var segmentForParallelRoute = routerState[1][key][0];\n        var cacheKey = Array.isArray(segmentForParallelRoute) ? segmentForParallelRoute[1] : segmentForParallelRoute;\n        var existingParallelRoutesCacheNode = existingCache.parallelRoutes.get(key);\n        if (existingParallelRoutesCacheNode) {\n            var parallelRouteCacheNode = new Map(existingParallelRoutesCacheNode);\n            parallelRouteCacheNode[\"delete\"](cacheKey);\n            newCache.parallelRoutes.set(key, parallelRouteCacheNode);\n        }\n    }\n}\n/**\n * Fill cache with subTreeData based on flightDataPath\n */ function fillCacheWithNewSubTreeData(newCache, existingCache, flightDataPath) {\n    var isLastEntry = flightDataPath.length <= 4;\n    var _flightDataPath = _slicedToArray(flightDataPath, 2), parallelRouteKey = _flightDataPath[0], segment = _flightDataPath[1];\n    var segmentForCache = Array.isArray(segment) ? segment[1] : segment;\n    var existingChildSegmentMap = existingCache.parallelRoutes.get(parallelRouteKey);\n    if (!existingChildSegmentMap) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        // Will trigger lazy fetch in layout-router because of missing segment\n        return;\n    }\n    var childSegmentMap = newCache.parallelRoutes.get(parallelRouteKey);\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n        childSegmentMap = new Map(existingChildSegmentMap);\n        newCache.parallelRoutes.set(parallelRouteKey, childSegmentMap);\n    }\n    var existingChildCacheNode = existingChildSegmentMap.get(segmentForCache);\n    var childCacheNode = childSegmentMap.get(segmentForCache);\n    // In case of last segment start the fetch at this level and don't copy further down.\n    if (isLastEntry) {\n        if (!childCacheNode || !childCacheNode.data || childCacheNode === existingChildCacheNode) {\n            childCacheNode = {\n                data: null,\n                subTreeData: flightDataPath[3],\n                // Ensure segments other than the one we got data for are preserved.\n                parallelRoutes: existingChildCacheNode ? new Map(existingChildCacheNode.parallelRoutes) : new Map()\n            };\n            if (existingChildCacheNode) {\n                invalidateCacheByRouterState(childCacheNode, existingChildCacheNode, flightDataPath[2]);\n            }\n            childSegmentMap.set(segmentForCache, childCacheNode);\n        }\n        return;\n    }\n    if (!childCacheNode || !existingChildCacheNode) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        // Will trigger lazy fetch in layout-router because of missing segment\n        return;\n    }\n    if (childCacheNode === existingChildCacheNode) {\n        childCacheNode = {\n            data: childCacheNode.data,\n            subTreeData: childCacheNode.subTreeData,\n            parallelRoutes: new Map(childCacheNode.parallelRoutes)\n        };\n        childSegmentMap.set(segmentForCache, childCacheNode);\n    }\n    fillCacheWithNewSubTreeData(childCacheNode, existingChildCacheNode, flightDataPath.slice(2));\n}\n/**\n * Fill cache up to the end of the flightSegmentPath, invalidating anything below it.\n */ function invalidateCacheBelowFlightSegmentPath(newCache, existingCache, flightSegmentPath) {\n    var isLastEntry = flightSegmentPath.length <= 2;\n    var _flightSegmentPath = _slicedToArray(flightSegmentPath, 2), parallelRouteKey = _flightSegmentPath[0], segment = _flightSegmentPath[1];\n    var segmentForCache = Array.isArray(segment) ? segment[1] : segment;\n    var existingChildSegmentMap = existingCache.parallelRoutes.get(parallelRouteKey);\n    if (!existingChildSegmentMap) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        // Will trigger lazy fetch in layout-router because of missing segment\n        return;\n    }\n    var childSegmentMap = newCache.parallelRoutes.get(parallelRouteKey);\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n        childSegmentMap = new Map(existingChildSegmentMap);\n        newCache.parallelRoutes.set(parallelRouteKey, childSegmentMap);\n    }\n    // In case of last entry don't copy further down.\n    if (isLastEntry) {\n        childSegmentMap[\"delete\"](segmentForCache);\n        return;\n    }\n    var existingChildCacheNode = existingChildSegmentMap.get(segmentForCache);\n    var childCacheNode = childSegmentMap.get(segmentForCache);\n    if (!childCacheNode || !existingChildCacheNode) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        // Will trigger lazy fetch in layout-router because of missing segment\n        return;\n    }\n    if (childCacheNode === existingChildCacheNode) {\n        childCacheNode = {\n            data: childCacheNode.data,\n            subTreeData: childCacheNode.subTreeData,\n            parallelRoutes: new Map(childCacheNode.parallelRoutes)\n        };\n        childSegmentMap.set(segmentForCache, childCacheNode);\n    }\n    invalidateCacheBelowFlightSegmentPath(childCacheNode, existingChildCacheNode, flightSegmentPath.slice(2));\n}\n/**\n * Fill cache with subTreeData based on flightDataPath that was prefetched\n * This operation is append-only to the existing cache.\n */ function fillCacheWithPrefetchedSubTreeData(existingCache, flightDataPath) {\n    var isLastEntry = flightDataPath.length <= 4;\n    var _flightDataPath = _slicedToArray(flightDataPath, 2), parallelRouteKey = _flightDataPath[0], segment = _flightDataPath[1];\n    var segmentForCache = Array.isArray(segment) ? segment[1] : segment;\n    var existingChildSegmentMap = existingCache.parallelRoutes.get(parallelRouteKey);\n    if (!existingChildSegmentMap) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        return;\n    }\n    var existingChildCacheNode = existingChildSegmentMap.get(segmentForCache);\n    if (isLastEntry) {\n        if (!existingChildCacheNode) {\n            existingChildSegmentMap.set(segmentForCache, {\n                data: null,\n                subTreeData: flightDataPath[3],\n                parallelRoutes: new Map()\n            });\n        }\n        return;\n    }\n    if (!existingChildCacheNode) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        return;\n    }\n    fillCacheWithPrefetchedSubTreeData(existingChildCacheNode, flightDataPath.slice(2));\n}\n/**\n * Kick off fetch based on the common layout between two routes. Fill cache with data property holding the in-progress fetch.\n */ function fillCacheWithDataProperty(newCache, existingCache, segments, fetchResponse) {\n    var isLastEntry = segments.length === 1;\n    var parallelRouteKey = \"children\";\n    var _segments = _slicedToArray(segments, 1), segment = _segments[0];\n    var existingChildSegmentMap = existingCache.parallelRoutes.get(parallelRouteKey);\n    if (!existingChildSegmentMap) {\n        // Bailout because the existing cache does not have the path to the leaf node\n        // Will trigger lazy fetch in layout-router because of missing segment\n        return {\n            bailOptimistic: true\n        };\n    }\n    var childSegmentMap = newCache.parallelRoutes.get(parallelRouteKey);\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n        childSegmentMap = new Map(existingChildSegmentMap);\n        newCache.parallelRoutes.set(parallelRouteKey, childSegmentMap);\n    }\n    var existingChildCacheNode = existingChildSegmentMap.get(segment);\n    var childCacheNode = childSegmentMap.get(segment);\n    // In case of last segment start off the fetch at this level and don't copy further down.\n    if (isLastEntry) {\n        if (!childCacheNode || !childCacheNode.data || childCacheNode === existingChildCacheNode) {\n            childSegmentMap.set(segment, {\n                data: fetchResponse(),\n                subTreeData: null,\n                parallelRoutes: new Map()\n            });\n        }\n        return;\n    }\n    if (!childCacheNode || !existingChildCacheNode) {\n        // Start fetch in the place where the existing cache doesn't have the data yet.\n        if (!childCacheNode) {\n            childSegmentMap.set(segment, {\n                data: fetchResponse(),\n                subTreeData: null,\n                parallelRoutes: new Map()\n            });\n        }\n        return;\n    }\n    if (childCacheNode === existingChildCacheNode) {\n        childCacheNode = {\n            data: childCacheNode.data,\n            subTreeData: childCacheNode.subTreeData,\n            parallelRoutes: new Map(childCacheNode.parallelRoutes)\n        };\n        childSegmentMap.set(segment, childCacheNode);\n    }\n    return fillCacheWithDataProperty(childCacheNode, existingChildCacheNode, segments.slice(1), fetchResponse);\n}\n/**\n * Create optimistic version of router state based on the existing router state and segments.\n * This is used to allow rendering layout-routers up till the point where data is missing.\n */ function createOptimisticTree(segments, flightRouterState, _isFirstSegment, parentRefetch, _href) {\n    var ref = _slicedToArray(flightRouterState || [\n        null,\n        {}\n    ], 2), existingSegment = ref[0], existingParallelRoutes = ref[1];\n    var segment = segments[0];\n    var isLastSegment = segments.length === 1;\n    var segmentMatches = existingSegment !== null && (0, _matchSegments).matchSegment(existingSegment, segment);\n    var shouldRefetchThisLevel = !flightRouterState || !segmentMatches;\n    var parallelRoutes = {};\n    if (existingSegment !== null && segmentMatches) {\n        parallelRoutes = existingParallelRoutes;\n    }\n    var childTree;\n    if (!isLastSegment) {\n        var childItem = createOptimisticTree(segments.slice(1), parallelRoutes ? parallelRoutes.children : null, false, parentRefetch || shouldRefetchThisLevel);\n        childTree = childItem;\n    }\n    var result = [\n        segment,\n        _extends({}, parallelRoutes, childTree ? {\n            children: childTree\n        } : {})\n    ];\n    if (!parentRefetch && shouldRefetchThisLevel) {\n        result[3] = \"refetch\";\n    }\n    // TODO-APP: Revisit\n    // Add url into the tree\n    // if (isFirstSegment) {\n    //   result[2] = href\n    // }\n    return result;\n}\n/**\n * Apply the router state from the Flight response. Creates a new router state tree.\n */ function applyRouterStatePatchToTree(flightSegmentPath, flightRouterState, treePatch) {\n    var _flightRouterState = _slicedToArray(flightRouterState, 5), segment = _flightRouterState[0], parallelRoutes = _flightRouterState[1], isRootLayout = _flightRouterState[4];\n    // Root refresh\n    if (flightSegmentPath.length === 1) {\n        var tree = _toConsumableArray(treePatch);\n        // TODO-APP: revisit\n        // if (url) {\n        //   tree[2] = url\n        // }\n        return tree;\n    }\n    var _flightSegmentPath = _slicedToArray(flightSegmentPath, 2), currentSegment = _flightSegmentPath[0], parallelRouteKey = _flightSegmentPath[1];\n    // Tree path returned from the server should always match up with the current tree in the browser\n    if (!(0, _matchSegments).matchSegment(currentSegment, segment)) {\n        return null;\n    }\n    var lastSegment = flightSegmentPath.length === 2;\n    var parallelRoutePatch;\n    if (lastSegment) {\n        parallelRoutePatch = treePatch;\n    } else {\n        parallelRoutePatch = applyRouterStatePatchToTree(flightSegmentPath.slice(2), parallelRoutes[parallelRouteKey], treePatch);\n        if (parallelRoutePatch === null) {\n            return null;\n        }\n    }\n    var tree1 = [\n        flightSegmentPath[0],\n        _extends({}, parallelRoutes, _defineProperty({}, parallelRouteKey, parallelRoutePatch))\n    ];\n    // Current segment is the root layout\n    if (isRootLayout) {\n        tree1[4] = true;\n    }\n    // TODO-APP: Revisit\n    // if (url) {\n    //   tree[2] = url\n    // }\n    return tree1;\n}\nfunction shouldHardNavigate(flightSegmentPath, flightRouterState, treePatch) {\n    var _flightRouterState = _slicedToArray(flightRouterState, 2), segment = _flightRouterState[0], parallelRoutes = _flightRouterState[1];\n    // TODO-APP: Check if `as` can be replaced.\n    var _flightSegmentPath = _slicedToArray(flightSegmentPath, 2), currentSegment = _flightSegmentPath[0], parallelRouteKey = _flightSegmentPath[1];\n    // Check if current segment matches the existing segment.\n    if (!(0, _matchSegments).matchSegment(currentSegment, segment)) {\n        // If dynamic parameter in tree doesn't match up with segment path a hard navigation is triggered.\n        if (Array.isArray(currentSegment)) {\n            return true;\n        }\n        // If the existing segment did not match soft navigation is triggered.\n        return false;\n    }\n    var lastSegment = flightSegmentPath.length <= 2;\n    if (lastSegment) {\n        return false;\n    }\n    return shouldHardNavigate(flightSegmentPath.slice(2), parallelRoutes[parallelRouteKey], treePatch);\n}\nfunction isNavigatingToNewRootLayout(currentTree, nextTree) {\n    // Compare segments\n    var currentTreeSegment = currentTree[0];\n    var nextTreeSegment = nextTree[0];\n    // If any segment is different before we find the root layout, the root layout has changed.\n    // E.g. /same/(group1)/layout.js -> /same/(group2)/layout.js\n    // First segment is 'same' for both, keep looking. (group1) changed to (group2) before the root layout was found, it must have changed.\n    if (Array.isArray(currentTreeSegment) && Array.isArray(nextTreeSegment)) {\n        // Compare dynamic param name and type but ignore the value, different values would not affect the current root layout\n        // /[name] - /slug1 and /slug2, both values (slug1 & slug2) still has the same layout /[name]/layout.js\n        if (currentTreeSegment[0] !== nextTreeSegment[0] || currentTreeSegment[2] !== nextTreeSegment[2]) {\n            return true;\n        }\n    } else if (currentTreeSegment !== nextTreeSegment) {\n        return true;\n    }\n    // Current tree root layout found\n    if (currentTree[4]) {\n        // If the next tree doesn't have the root layout flag, it must have changed.\n        return !nextTree[4];\n    }\n    // Current tree  didn't have its root layout here, must have changed.\n    if (nextTree[4]) {\n        return true;\n    }\n    // We can't assume it's `parallelRoutes.children` here in case the root layout is `app/@something/layout.js`\n    // But it's not possible to be more than one parallelRoutes before the root layout is found\n    // TODO-APP: change to traverse all parallel routes\n    var currentTreeChild = Object.values(currentTree[1])[0];\n    var nextTreeChild = Object.values(nextTree[1])[0];\n    if (!currentTreeChild || !nextTreeChild) return true;\n    return isNavigatingToNewRootLayout(currentTreeChild, nextTreeChild);\n}\nvar ACTION_REFRESH = \"refresh\";\nexports.ACTION_REFRESH = ACTION_REFRESH;\nvar ACTION_NAVIGATE = \"navigate\";\nexports.ACTION_NAVIGATE = ACTION_NAVIGATE;\nvar ACTION_RESTORE = \"restore\";\nexports.ACTION_RESTORE = ACTION_RESTORE;\nvar ACTION_SERVER_PATCH = \"server-patch\";\nexports.ACTION_SERVER_PATCH = ACTION_SERVER_PATCH;\nvar ACTION_PREFETCH = \"prefetch\";\nexports.ACTION_PREFETCH = ACTION_PREFETCH;\n/**\n * Reducer that handles the app-router state updates.\n */ function clientReducer(state, action) {\n    switch(action.type){\n        case ACTION_NAVIGATE:\n            {\n                var url = action.url, navigateType = action.navigateType, cache = action.cache, mutable = action.mutable, forceOptimisticNavigation = action.forceOptimisticNavigation;\n                var pathname = url.pathname, search = url.search;\n                var href = createHrefFromUrl(url);\n                var pendingPush = navigateType === \"push\";\n                var isForCurrentTree = JSON.stringify(mutable.previousTree) === JSON.stringify(state.tree);\n                if (mutable.mpaNavigation && isForCurrentTree) {\n                    return {\n                        // Set href.\n                        canonicalUrl: mutable.canonicalUrlOverride ? mutable.canonicalUrlOverride : href,\n                        // TODO-APP: verify mpaNavigation not being set is correct here.\n                        pushRef: {\n                            pendingPush: pendingPush,\n                            mpaNavigation: mutable.mpaNavigation\n                        },\n                        // All navigation requires scroll and focus management to trigger.\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        // Apply cache.\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        // Apply patched router state.\n                        tree: state.tree\n                    };\n                }\n                // Handle concurrent rendering / strict mode case where the cache and tree were already populated.\n                if (mutable.patchedTree && isForCurrentTree) {\n                    return {\n                        // Set href.\n                        canonicalUrl: mutable.canonicalUrlOverride ? mutable.canonicalUrlOverride : href,\n                        // TODO-APP: verify mpaNavigation not being set is correct here.\n                        pushRef: {\n                            pendingPush: pendingPush,\n                            mpaNavigation: false\n                        },\n                        // All navigation requires scroll and focus management to trigger.\n                        focusAndScrollRef: {\n                            apply: true\n                        },\n                        // Apply cache.\n                        cache: mutable.useExistingCache ? state.cache : cache,\n                        prefetchCache: state.prefetchCache,\n                        // Apply patched router state.\n                        tree: mutable.patchedTree\n                    };\n                }\n                var prefetchValues = state.prefetchCache.get(href);\n                if (prefetchValues) {\n                    // The one before last item is the router state tree patch\n                    var flightSegmentPath = prefetchValues.flightSegmentPath, newTree = prefetchValues.tree, canonicalUrlOverride = prefetchValues.canonicalUrlOverride;\n                    if (newTree !== null) {\n                        mutable.previousTree = state.tree;\n                        mutable.patchedTree = newTree;\n                        mutable.mpaNavigation = isNavigatingToNewRootLayout(state.tree, newTree);\n                        var hardNavigate = search !== location.search || shouldHardNavigate([\n                            \"\"\n                        ].concat(_toConsumableArray(flightSegmentPath)), state.tree, newTree);\n                        if (hardNavigate) {\n                            // TODO-APP: segments.slice(1) strips '', we can get rid of '' altogether.\n                            // Copy subTreeData for the root node of the cache.\n                            cache.subTreeData = state.cache.subTreeData;\n                            invalidateCacheBelowFlightSegmentPath(cache, state.cache, flightSegmentPath);\n                        } else {\n                            mutable.useExistingCache = true;\n                        }\n                        var canonicalUrlOverrideHref = canonicalUrlOverride ? createHrefFromUrl(canonicalUrlOverride) : undefined;\n                        if (canonicalUrlOverrideHref) {\n                            mutable.canonicalUrlOverride = canonicalUrlOverrideHref;\n                        }\n                        return {\n                            // Set href.\n                            canonicalUrl: canonicalUrlOverrideHref ? canonicalUrlOverrideHref : href,\n                            // Set pendingPush.\n                            pushRef: {\n                                pendingPush: pendingPush,\n                                mpaNavigation: false\n                            },\n                            // All navigation requires scroll and focus management to trigger.\n                            focusAndScrollRef: {\n                                apply: true\n                            },\n                            // Apply patched cache.\n                            cache: mutable.useExistingCache ? state.cache : cache,\n                            prefetchCache: state.prefetchCache,\n                            // Apply patched tree.\n                            tree: newTree\n                        };\n                    }\n                }\n                // When doing a hard push there can be two cases: with optimistic tree and without\n                // The with optimistic tree case only happens when the layouts have a loading state (loading.js)\n                // The without optimistic tree case happens when there is no loading state, in that case we suspend in this reducer\n                // forceOptimisticNavigation is used for links that have `prefetch={false}`.\n                if (forceOptimisticNavigation) {\n                    var segments = pathname.split(\"/\");\n                    // TODO-APP: figure out something better for index pages\n                    segments.push(\"\");\n                    // Optimistic tree case.\n                    // If the optimistic tree is deeper than the current state leave that deeper part out of the fetch\n                    var optimisticTree = createOptimisticTree(segments, state.tree, true, false, href);\n                    // Copy subTreeData for the root node of the cache.\n                    cache.subTreeData = state.cache.subTreeData;\n                    // Copy existing cache nodes as far as possible and fill in `data` property with the started data fetch.\n                    // The `data` property is used to suspend in layout-router during render if it hasn't resolved yet by the time it renders.\n                    var res = fillCacheWithDataProperty(cache, state.cache, segments.slice(1), function() {\n                        return (0, _appRouter).fetchServerResponse(url, optimisticTree);\n                    });\n                    // If optimistic fetch couldn't happen it falls back to the non-optimistic case.\n                    if (!(res == null ? void 0 : res.bailOptimistic)) {\n                        mutable.previousTree = state.tree;\n                        mutable.patchedTree = optimisticTree;\n                        mutable.mpaNavigation = isNavigatingToNewRootLayout(state.tree, optimisticTree);\n                        return {\n                            // Set href.\n                            canonicalUrl: href,\n                            // Set pendingPush.\n                            pushRef: {\n                                pendingPush: pendingPush,\n                                mpaNavigation: false\n                            },\n                            // All navigation requires scroll and focus management to trigger.\n                            focusAndScrollRef: {\n                                apply: true\n                            },\n                            // Apply patched cache.\n                            cache: cache,\n                            prefetchCache: state.prefetchCache,\n                            // Apply optimistic tree.\n                            tree: optimisticTree\n                        };\n                    }\n                }\n                // Below is the not-optimistic case. Data is fetched at the root and suspended there without a suspense boundary.\n                // If no in-flight fetch at the top, start it.\n                if (!cache.data) {\n                    cache.data = createRecordFromThenable((0, _appRouter).fetchServerResponse(url, state.tree));\n                }\n                // Unwrap cache data with `use` to suspend here (in the reducer) until the fetch resolves.\n                var ref = _slicedToArray(readRecordValue(cache.data), 2), flightData = ref[0], canonicalUrlOverride1 = ref[1];\n                // Handle case when navigating to page in `pages` from `app`\n                if (typeof flightData === \"string\") {\n                    return {\n                        canonicalUrl: flightData,\n                        // Enable mpaNavigation\n                        pushRef: {\n                            pendingPush: true,\n                            mpaNavigation: true\n                        },\n                        // Don't apply scroll and focus management.\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        tree: state.tree\n                    };\n                }\n                // Remove cache.data as it has been resolved at this point.\n                cache.data = null;\n                // TODO-APP: Currently the Flight data can only have one item but in the future it can have multiple paths.\n                var flightDataPath = flightData[0];\n                // The one before last item is the router state tree patch\n                var ref1 = _slicedToArray(flightDataPath.slice(-2), 2), treePatch = ref1[0], subTreeData = ref1[1];\n                // Path without the last segment, router state, and the subTreeData\n                var flightSegmentPath1 = flightDataPath.slice(0, -3);\n                // Create new tree based on the flightSegmentPath and router state patch\n                var newTree1 = applyRouterStatePatchToTree([\n                    \"\"\n                ].concat(_toConsumableArray(flightSegmentPath1)), state.tree, treePatch);\n                if (newTree1 === null) {\n                    throw new Error(\"SEGMENT MISMATCH\");\n                }\n                var canonicalUrlOverrideHref1 = canonicalUrlOverride1 ? createHrefFromUrl(canonicalUrlOverride1) : undefined;\n                if (canonicalUrlOverrideHref1) {\n                    mutable.canonicalUrlOverride = canonicalUrlOverrideHref1;\n                }\n                mutable.previousTree = state.tree;\n                mutable.patchedTree = newTree1;\n                mutable.mpaNavigation = isNavigatingToNewRootLayout(state.tree, newTree1);\n                if (flightDataPath.length === 2) {\n                    cache.subTreeData = subTreeData;\n                } else {\n                    // Copy subTreeData for the root node of the cache.\n                    cache.subTreeData = state.cache.subTreeData;\n                    // Create a copy of the existing cache with the subTreeData applied.\n                    fillCacheWithNewSubTreeData(cache, state.cache, flightDataPath);\n                }\n                return {\n                    // Set href.\n                    canonicalUrl: canonicalUrlOverrideHref1 ? canonicalUrlOverrideHref1 : href,\n                    // Set pendingPush.\n                    pushRef: {\n                        pendingPush: pendingPush,\n                        mpaNavigation: false\n                    },\n                    // All navigation requires scroll and focus management to trigger.\n                    focusAndScrollRef: {\n                        apply: true\n                    },\n                    // Apply patched cache.\n                    cache: cache,\n                    prefetchCache: state.prefetchCache,\n                    // Apply patched tree.\n                    tree: newTree1\n                };\n            }\n        case ACTION_SERVER_PATCH:\n            {\n                var flightData1 = action.flightData, previousTree = action.previousTree, overrideCanonicalUrl = action.overrideCanonicalUrl, cache1 = action.cache, mutable1 = action.mutable;\n                // When a fetch is slow to resolve it could be that you navigated away while the request was happening or before the reducer runs.\n                // In that case opt-out of applying the patch given that the data could be stale.\n                if (JSON.stringify(previousTree) !== JSON.stringify(state.tree)) {\n                    // TODO-APP: Handle tree mismatch\n                    console.log(\"TREE MISMATCH\");\n                    // Keep everything as-is.\n                    return state;\n                }\n                if (mutable1.mpaNavigation) {\n                    return {\n                        // Set href.\n                        canonicalUrl: mutable1.canonicalUrlOverride ? mutable1.canonicalUrlOverride : state.canonicalUrl,\n                        // TODO-APP: verify mpaNavigation not being set is correct here.\n                        pushRef: {\n                            pendingPush: true,\n                            mpaNavigation: mutable1.mpaNavigation\n                        },\n                        // All navigation requires scroll and focus management to trigger.\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        // Apply cache.\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        // Apply patched router state.\n                        tree: state.tree\n                    };\n                }\n                // Handle concurrent rendering / strict mode case where the cache and tree were already populated.\n                if (mutable1.patchedTree) {\n                    return {\n                        // Keep href as it was set during navigate / restore\n                        canonicalUrl: mutable1.canonicalUrlOverride ? mutable1.canonicalUrlOverride : state.canonicalUrl,\n                        // Keep pushRef as server-patch only causes cache/tree update.\n                        pushRef: state.pushRef,\n                        // Keep focusAndScrollRef as server-patch only causes cache/tree update.\n                        focusAndScrollRef: state.focusAndScrollRef,\n                        // Apply patched router state\n                        tree: mutable1.patchedTree,\n                        prefetchCache: state.prefetchCache,\n                        // Apply patched cache\n                        cache: cache1\n                    };\n                }\n                // Handle case when navigating to page in `pages` from `app`\n                if (typeof flightData1 === \"string\") {\n                    return {\n                        // Set href.\n                        canonicalUrl: flightData1,\n                        // Enable mpaNavigation as this is a navigation that the app-router shouldn't handle.\n                        pushRef: {\n                            pendingPush: true,\n                            mpaNavigation: true\n                        },\n                        // Don't apply scroll and focus management.\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        // Other state is kept as-is.\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        tree: state.tree\n                    };\n                }\n                // TODO-APP: Currently the Flight data can only have one item but in the future it can have multiple paths.\n                var flightDataPath1 = flightData1[0];\n                // Slices off the last segment (which is at -3) as it doesn't exist in the tree yet\n                var treePath = flightDataPath1.slice(0, -3);\n                var ref2 = _slicedToArray(flightDataPath1.slice(-2), 2), treePatch1 = ref2[0], subTreeData1 = ref2[1];\n                var newTree2 = applyRouterStatePatchToTree([\n                    \"\"\n                ].concat(_toConsumableArray(treePath)), state.tree, treePatch1);\n                if (newTree2 === null) {\n                    throw new Error(\"SEGMENT MISMATCH\");\n                }\n                var canonicalUrlOverrideHref2 = overrideCanonicalUrl ? createHrefFromUrl(overrideCanonicalUrl) : undefined;\n                if (canonicalUrlOverrideHref2) {\n                    mutable1.canonicalUrlOverride = canonicalUrlOverrideHref2;\n                }\n                mutable1.patchedTree = newTree2;\n                mutable1.mpaNavigation = isNavigatingToNewRootLayout(state.tree, newTree2);\n                // Root refresh\n                if (flightDataPath1.length === 2) {\n                    cache1.subTreeData = subTreeData1;\n                } else {\n                    // Copy subTreeData for the root node of the cache.\n                    cache1.subTreeData = state.cache.subTreeData;\n                    fillCacheWithNewSubTreeData(cache1, state.cache, flightDataPath1);\n                }\n                return {\n                    // Keep href as it was set during navigate / restore\n                    canonicalUrl: canonicalUrlOverrideHref2 ? canonicalUrlOverrideHref2 : state.canonicalUrl,\n                    // Keep pushRef as server-patch only causes cache/tree update.\n                    pushRef: state.pushRef,\n                    // Keep focusAndScrollRef as server-patch only causes cache/tree update.\n                    focusAndScrollRef: state.focusAndScrollRef,\n                    // Apply patched router state\n                    tree: newTree2,\n                    prefetchCache: state.prefetchCache,\n                    // Apply patched cache\n                    cache: cache1\n                };\n            }\n        case ACTION_RESTORE:\n            {\n                var url1 = action.url, tree = action.tree;\n                var href1 = createHrefFromUrl(url1);\n                return {\n                    // Set canonical url\n                    canonicalUrl: href1,\n                    pushRef: state.pushRef,\n                    focusAndScrollRef: state.focusAndScrollRef,\n                    cache: state.cache,\n                    prefetchCache: state.prefetchCache,\n                    // Restore provided tree\n                    tree: tree\n                };\n            }\n        case ACTION_REFRESH:\n            {\n                var cache2 = action.cache, mutable2 = action.mutable;\n                var href2 = state.canonicalUrl;\n                var isForCurrentTree1 = JSON.stringify(mutable2.previousTree) === JSON.stringify(state.tree);\n                if (mutable2.mpaNavigation && isForCurrentTree1) {\n                    return {\n                        // Set href.\n                        canonicalUrl: mutable2.canonicalUrlOverride ? mutable2.canonicalUrlOverride : state.canonicalUrl,\n                        // TODO-APP: verify mpaNavigation not being set is correct here.\n                        pushRef: {\n                            pendingPush: true,\n                            mpaNavigation: mutable2.mpaNavigation\n                        },\n                        // All navigation requires scroll and focus management to trigger.\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        // Apply cache.\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        // Apply patched router state.\n                        tree: state.tree\n                    };\n                }\n                // Handle concurrent rendering / strict mode case where the cache and tree were already populated.\n                if (mutable2.patchedTree && isForCurrentTree1) {\n                    return {\n                        // Set href.\n                        canonicalUrl: mutable2.canonicalUrlOverride ? mutable2.canonicalUrlOverride : href2,\n                        // set pendingPush (always false in this case).\n                        pushRef: state.pushRef,\n                        // Apply focus and scroll.\n                        // TODO-APP: might need to disable this for Fast Refresh.\n                        focusAndScrollRef: {\n                            apply: true\n                        },\n                        cache: cache2,\n                        prefetchCache: state.prefetchCache,\n                        tree: mutable2.patchedTree\n                    };\n                }\n                if (!cache2.data) {\n                    // Fetch data from the root of the tree.\n                    cache2.data = createRecordFromThenable((0, _appRouter).fetchServerResponse(new URL(href2, location.origin), [\n                        state.tree[0],\n                        state.tree[1],\n                        state.tree[2],\n                        \"refetch\"\n                    ]));\n                }\n                var ref3 = _slicedToArray(readRecordValue(cache2.data), 2), flightData2 = ref3[0], canonicalUrlOverride2 = ref3[1];\n                // Handle case when navigating to page in `pages` from `app`\n                if (typeof flightData2 === \"string\") {\n                    return {\n                        canonicalUrl: flightData2,\n                        pushRef: {\n                            pendingPush: true,\n                            mpaNavigation: true\n                        },\n                        focusAndScrollRef: {\n                            apply: false\n                        },\n                        cache: state.cache,\n                        prefetchCache: state.prefetchCache,\n                        tree: state.tree\n                    };\n                }\n                // Remove cache.data as it has been resolved at this point.\n                cache2.data = null;\n                // TODO-APP: Currently the Flight data can only have one item but in the future it can have multiple paths.\n                var flightDataPath2 = flightData2[0];\n                // FlightDataPath with more than two items means unexpected Flight data was returned\n                if (flightDataPath2.length !== 2) {\n                    // TODO-APP: handle this case better\n                    console.log(\"REFRESH FAILED\");\n                    return state;\n                }\n                // Given the path can only have two items the items are only the router state and subTreeData for the root.\n                var _flightDataPath = _slicedToArray(flightDataPath2, 2), treePatch2 = _flightDataPath[0], subTreeData2 = _flightDataPath[1];\n                var newTree3 = applyRouterStatePatchToTree([\n                    \"\"\n                ], state.tree, treePatch2);\n                if (newTree3 === null) {\n                    throw new Error(\"SEGMENT MISMATCH\");\n                }\n                var canonicalUrlOverrideHref3 = canonicalUrlOverride2 ? createHrefFromUrl(canonicalUrlOverride2) : undefined;\n                if (canonicalUrlOverride2) {\n                    mutable2.canonicalUrlOverride = canonicalUrlOverrideHref3;\n                }\n                mutable2.previousTree = state.tree;\n                mutable2.patchedTree = newTree3;\n                mutable2.mpaNavigation = isNavigatingToNewRootLayout(state.tree, newTree3);\n                // Set subTreeData for the root node of the cache.\n                cache2.subTreeData = subTreeData2;\n                return {\n                    // Set href, this doesn't reuse the state.canonicalUrl as because of concurrent rendering the href might change between dispatching and applying.\n                    canonicalUrl: canonicalUrlOverrideHref3 ? canonicalUrlOverrideHref3 : href2,\n                    // set pendingPush (always false in this case).\n                    pushRef: state.pushRef,\n                    // TODO-APP: might need to disable this for Fast Refresh.\n                    focusAndScrollRef: {\n                        apply: false\n                    },\n                    // Apply patched cache.\n                    cache: cache2,\n                    prefetchCache: state.prefetchCache,\n                    // Apply patched router state.\n                    tree: newTree3\n                };\n            }\n        case ACTION_PREFETCH:\n            {\n                var url2 = action.url, serverResponse = action.serverResponse;\n                var _serverResponse = _slicedToArray(serverResponse, 2), flightData3 = _serverResponse[0], canonicalUrlOverride3 = _serverResponse[1];\n                // TODO-APP: Implement prefetch for hard navigation\n                if (typeof flightData3 === \"string\") {\n                    return state;\n                }\n                var href3 = createHrefFromUrl(url2);\n                // TODO-APP: Currently the Flight data can only have one item but in the future it can have multiple paths.\n                var flightDataPath3 = flightData3[0];\n                // The one before last item is the router state tree patch\n                var ref4 = _slicedToArray(flightDataPath3.slice(-2), 2), treePatch3 = ref4[0], subTreeData3 = ref4[1];\n                // TODO-APP: Verify if `null` can't be returned from user code.\n                // If subTreeData is null the prefetch did not provide a component tree.\n                if (subTreeData3 !== null) {\n                    fillCacheWithPrefetchedSubTreeData(state.cache, flightDataPath3);\n                }\n                var flightSegmentPath2 = flightDataPath3.slice(0, -2);\n                var newTree4 = applyRouterStatePatchToTree([\n                    \"\"\n                ].concat(_toConsumableArray(flightSegmentPath2)), state.tree, treePatch3);\n                // Patch did not apply correctly\n                if (newTree4 === null) {\n                    return state;\n                }\n                // Create new tree based on the flightSegmentPath and router state patch\n                state.prefetchCache.set(href3, {\n                    // Path without the last segment, router state, and the subTreeData\n                    flightSegmentPath: flightSegmentPath2,\n                    // Create new tree based on the flightSegmentPath and router state patch\n                    tree: newTree4,\n                    canonicalUrlOverride: canonicalUrlOverride3\n                });\n                return state;\n            }\n        // This case should never be hit as dispatch is strongly typed.\n        default:\n            throw new Error(\"Unknown action\");\n    }\n}\nfunction serverReducer(state, _action) {\n    return state;\n}\nvar reducer =  false ? 0 : clientReducer;\nexports.reducer = reducer;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=reducer.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/reducer.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/render-from-template-context.js":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/render-from-template-context.js ***!
  \******************************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = RenderFromTemplateContext;\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./.yarn/cache/@swc-helpers-npm-0.4.11-d20747f9c8-736857d524.zip/node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react/index.js\"));\nvar _appRouterContext = __webpack_require__(/*! ../../shared/lib/app-router-context */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/shared/lib/app-router-context.js\");\nfunction RenderFromTemplateContext() {\n    _s();\n    var children = (0, _react).useContext(_appRouterContext.TemplateContext);\n    return /*#__PURE__*/ _react[\"default\"].createElement(_react[\"default\"].Fragment, null, children);\n}\n_s(RenderFromTemplateContext, \"Fd1ieM0FAzMq7OA5+LlfYPV5S7Y=\");\n_c = RenderFromTemplateContext;\n\"use client\";\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=render-from-template-context.js.map\nvar _c;\n$RefreshReg$(_c, \"RenderFromTemplateContext\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9uZXh0LXZpcnR1YWwtMzkzZDkxYmJjZC8wL2NhY2hlL25leHQtbnBtLTEzLjAuMi1iMzlhYmQyMmQwLWY2ZmVhMmVlMzQuemlwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFDYTs7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0c7QUFDbEIsSUFBSUMsNEJBQTRCQyxtTkFBZ0U7QUFDaEcsSUFBSUMsU0FBU0YsMEJBQTBCQyxtQkFBT0EsQ0FBQywySkFBTztBQUN0RCxJQUFJRSxvQkFBb0JGLG1CQUFPQSxDQUFDLGtNQUFxQztBQUNyRSxTQUFTRiw0QkFBNEI7O0lBQ2pDLElBQU1LLFdBQVcsQ0FBQyxHQUFHRixNQUFNLEVBQUVHLFVBQVUsQ0FBQ0Ysa0JBQWtCRyxlQUFlO0lBQ3pFLE9BQU8sV0FBVyxHQUFHSixNQUFPSixDQUFBQSxVQUFPLENBQUNTLGFBQWEsQ0FBQ0wsTUFBT0osQ0FBQUEsVUFBTyxDQUFDVSxRQUFRLEVBQUUsSUFBSSxFQUFFSjtBQUNyRjtHQUhTTDtLQUFBQTtBQUlUO0FBRUEsSUFBSSxDQUFDLE9BQU9ILE9BQVFFLENBQUFBLFVBQU8sS0FBSyxjQUFlLE9BQU9GLE9BQVFFLENBQUFBLFVBQU8sS0FBSyxZQUFZRixPQUFRRSxDQUFBQSxVQUFPLEtBQUssSUFBSSxLQUFNLE9BQU9GLE9BQVFFLENBQUFBLFVBQU8sQ0FBQ1csVUFBVSxLQUFLLGFBQWE7SUFDcktmLE9BQU9DLGNBQWMsQ0FBQ0MsT0FBUUUsQ0FBQUEsVUFBTyxFQUFFLGNBQWM7UUFBRUQsT0FBTyxJQUFJO0lBQUM7SUFDbkVILE9BQU9nQixNQUFNLENBQUNkLE9BQVFFLENBQUFBLFVBQU8sRUFBRUY7SUFDL0JlLE9BQU9mLE9BQU8sR0FBR0EsT0FBUUUsQ0FBQUEsVUFBTztBQUNsQyxDQUFDLENBRUQsd0RBQXdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLy55YXJuL19fdmlydHVhbF9fL25leHQtdmlydHVhbC0zOTNkOTFiYmNkLzAvY2FjaGUvbmV4dC1ucG0tMTMuMC4yLWIzOWFiZDIyZDAtZjZmZWEyZWUzNC56aXAvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzP2IxMmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJlbmRlckZyb21UZW1wbGF0ZUNvbnRleHQ7XG52YXIgX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZCA9IHJlcXVpcmUoXCJAc3djL2hlbHBlcnMvbGliL19pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQuanNcIikuZGVmYXVsdDtcbnZhciBfcmVhY3QgPSBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX2FwcFJvdXRlckNvbnRleHQgPSByZXF1aXJlKFwiLi4vLi4vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHRcIik7XG5mdW5jdGlvbiBSZW5kZXJGcm9tVGVtcGxhdGVDb250ZXh0KCkge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gKDAsIF9yZWFjdCkudXNlQ29udGV4dChfYXBwUm91dGVyQ29udGV4dC5UZW1wbGF0ZUNvbnRleHQpO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbid1c2UgY2xpZW50JztcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiUmVuZGVyRnJvbVRlbXBsYXRlQ29udGV4dCIsIl9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2FwcFJvdXRlckNvbnRleHQiLCJjaGlsZHJlbiIsInVzZUNvbnRleHQiLCJUZW1wbGF0ZUNvbnRleHQiLCJjcmVhdGVFbGVtZW50IiwiRnJhZ21lbnQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/render-from-template-context.js\n"));

/***/ }),

/***/ "./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/use-reducer-with-devtools.js":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/use-reducer-with-devtools.js ***!
  \***************************************************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useReducerWithReduxDevtools = void 0;\nvar _react = __webpack_require__(/*! react */ \"./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/compiled/react/index.js\");\nfunction normalizeRouterState(val) {\n    if (val instanceof Map) {\n        var obj = {};\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = val.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _value = _slicedToArray(_step.value, 2), key = _value[0], value = _value[1];\n                if (typeof value === \"function\") {\n                    obj[key] = \"fn()\";\n                    continue;\n                }\n                if (typeof value === \"object\" && value !== null) {\n                    if (value.$$typeof) {\n                        obj[key] = value.$$typeof.toString();\n                        continue;\n                    }\n                    if (value._bundlerConfig) {\n                        obj[key] = \"FlightData\";\n                        continue;\n                    }\n                }\n                obj[key] = normalizeRouterState(value);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return obj;\n    }\n    if (typeof val === \"object\" && val !== null) {\n        var obj1 = {};\n        for(var key1 in val){\n            var value1 = val[key1];\n            if (typeof value1 === \"function\") {\n                obj1[key1] = \"fn()\";\n                continue;\n            }\n            if (typeof value1 === \"object\" && value1 !== null) {\n                if (value1.$$typeof) {\n                    obj1[key1] = value1.$$typeof.toString();\n                    continue;\n                }\n                if (value1.hasOwnProperty(\"_bundlerConfig\")) {\n                    obj1[key1] = \"FlightData\";\n                    continue;\n                }\n            }\n            obj1[key1] = normalizeRouterState(value1);\n        }\n        return obj1;\n    }\n    if (Array.isArray(val)) {\n        return val.map(normalizeRouterState);\n    }\n    return val;\n}\nfunction devToolReducer(fn, ref) {\n    return function(state, action) {\n        var res = fn(state, action);\n        if (ref.current) {\n            ref.current.send(action, normalizeRouterState(res));\n        }\n        return res;\n    };\n}\nfunction useReducerWithReduxDevtoolsNoop(fn, initialState) {\n    _s();\n    var ref = _slicedToArray((0, _react).useReducer(fn, initialState), 2), state = ref[0], dispatch = ref[1];\n    return [\n        state,\n        dispatch,\n        function() {}\n    ];\n}\n_s(useReducerWithReduxDevtoolsNoop, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\nfunction useReducerWithReduxDevtoolsImpl(fn, initialState) {\n    _s1();\n    var devtoolsConnectionRef = (0, _react).useRef();\n    var enabledRef = (0, _react).useRef();\n    (0, _react).useEffect(function() {\n        if (devtoolsConnectionRef.current || enabledRef.current === false) {\n            return;\n        }\n        if (enabledRef.current === undefined && typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"undefined\") {\n            enabledRef.current = false;\n            return;\n        }\n        devtoolsConnectionRef.current = window.__REDUX_DEVTOOLS_EXTENSION__.connect({\n            instanceId: 1,\n            name: \"next-router\"\n        });\n        if (devtoolsConnectionRef.current) {\n            devtoolsConnectionRef.current.init(normalizeRouterState(initialState));\n        }\n        return function() {\n            devtoolsConnectionRef.current = undefined;\n        };\n    }, [\n        initialState\n    ]);\n    var ref = _slicedToArray((0, _react).useReducer(devToolReducer(/* logReducer( */ fn /*)*/ , devtoolsConnectionRef), initialState), 2), state = ref[0], dispatch = ref[1];\n    var sync = (0, _react).useCallback(function() {\n        if (devtoolsConnectionRef.current) {\n            devtoolsConnectionRef.current.send({\n                type: \"RENDER_SYNC\"\n            }, normalizeRouterState(state));\n        }\n    }, [\n        state\n    ]);\n    return [\n        state,\n        dispatch,\n        sync\n    ];\n}\n_s1(useReducerWithReduxDevtoolsImpl, \"pLR6zS9fUqATAvEc1j249W8BDm8=\");\nvar useReducerWithReduxDevtools =  true ? useReducerWithReduxDevtoolsImpl : 0;\nexports.useReducerWithReduxDevtools = useReducerWithReduxDevtools;\nif ((typeof exports[\"default\"] === \"function\" || typeof exports[\"default\"] === \"object\" && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === \"undefined\") {\n    Object.defineProperty(exports[\"default\"], \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports[\"default\"], exports);\n    module.exports = exports[\"default\"];\n} //# sourceMappingURL=use-reducer-with-devtools.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/next-virtual-393d91bbcd/0/cache/next-npm-13.0.2-b39abd22d0-f6fea2ee34.zip/node_modules/next/dist/client/components/use-reducer-with-devtools.js\n"));

/***/ })

});